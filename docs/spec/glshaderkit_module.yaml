module: GLShaderKit

functions:
  - name: version
    description: DLL のバージョンを取得する。
    params: []
    returns:
      - type: string
        description: |-
          バージョン文字列 (例: `0.1.0`)

  - name: isInitialized
    description: DLL の初期化が完了しているかどうかを取得する。
    params: []
    returns:
      - type: boolean
        description: |-
          `true` なら DLL は利用可能、 `false` なら DLL は利用できない。

  - name: glVendor
    description: |-
      `glGetString(GL_VENDOR)` の結果を返す。
    params: []
    returns:
      - type: string
        description: OpenGL 実装のベンダー

  - name: glRenderer
    description: |-
      `glGetString(GL_RENDERER)` の結果を返す。
    params: []
    returns:
      - type: string
        description: OpenGL レンダラー

  - name: glVersion
    description: |-
      `glGetString(GL_VERSION)` の結果を返す。
    params: []
    returns:
      - type: string
        description: OpenGL バージョン

  - name: glslVersion
    description: |-
      `glGetString(GL_SHADING_LANGUAGE_VERSION)` の結果を返す。
    params: []
    returns:
      - type: string
        description: GLSL バージョン

  - name: activate
    description: |-
      レンダリングコンテキストを有効化する。
      スクリプト内でDLLの機能を利用する前に1回実行すること。
    params: []
    returns:
      - type: boolean
        description: |-
          `true` なら成功、`false` なら失敗

  - name: deactivate
    description: |-
      レンダリングコンテキストを無効化する。
      スクリプト内でDLLの機能を利用し終わった後に1回実行すること。
    params: []

  - name: setPlaneVertex
    description: |-
      板ポリゴンを表す頂点配列オブジェクトを利用可能にする。

      板ポリゴンは横に n 分割、縦に n 分割される。
      $(n + 1) ^ 2$ 個の 頂点が作成される。

      | location | 型   | 頂点属性                |
      | -------: | ---- | ----------------------- |
      |        0 | vec3 | 頂点座標 $[-1, 1]$      |
      |        1 | vec2 | テクスチャ座標 $[0, 1]$ |
    params:
      - name: n
        type: integer
        description: 板ポリゴンの分割数。1以上の整数。

  - name: setPointVertex
    description: |-
      n 個の点群を表す頂点配列オブジェクトを利用可能にする。

      | location | 型    | 頂点属性                        |
      | -------: | ----- | ------------------------------- |
      |        0 | float | 頂点番号 $(0, 1, \cdots, n-1 )$ |
    params:
      - name: n
        type: integer
        description: 頂点数。1以上の整数。

  - name: setShader
    description: |-
      シェーダープログラムを利用可能にする。

      指定したシェーダーのソースファイルをコンパイル・リンクして利用可能な状態にする。
      引数で指定するファイルは1個だけだが、ファイル名が同じで拡張子が対応しているファイルが見つかれば自動で読み込まれる。

      | 拡張子  | シェーダー                     |
      | ------- | ------------------------------ |
      | `.vert` | 頂点シェーダー                 |
      | `.frag` | フラグメントシェーダー         |
      | `.tesc` | テッセレーション制御シェーダー |
      | `.tese` | テッセレーション評価シェーダー |
      | `.geom` | ジオメトリシェーダー           |

      頂点シェーダーが見つからない場合は以下のデフォルト頂点シェーダーが使用される。
      ```glsl
      #version 460 core

      layout(location = 0) in vec3 iPos;
      layout(location = 1) in vec2 iTexCoord;

      out vec2 TexCoord;

      void main() {
          gl_Position = vec4(iPos, 1.0);
          TexCoord = iTexCoord;
      }
      ```

      シェーダープログラムのコンパイル・リンク時にエラーがあった場合はコンソールウィンドウにエラーメッセージが表示される。

      コンパイル・リンクされたシェーダープログラムは一定個数キャッシュされる。
    params:
      - name: shaderPath
        type: string
        description: シェーダーのソースファイルの絶対パス
      - name: forceReload
        type: boolean
        description: |-
          `true` ならシェーダープログラムがキャッシュされていても再コンパイルする。
          省略した場合は `false` 。
        optional: true

  - name: setFloat
    description: |-
      `float` 型のユニフォーム変数を設定する。

      `setShader` の後に実行すること。
    params:
      - name: name
        type: string
        description: ユニフォーム変数の名前
      - name: x
        type: number
        description: 値

  - name: setFloat
    description: |-
      `vec2` 型のユニフォーム変数を設定する。

      `setShader` の後に実行すること。
    params:
      - name: name
        type: string
        description: ユニフォーム変数の名前
      - name: x
        type: number
        description: x成分
      - name: y
        type: number
        description: y成分

  - name: setFloat
    description: |-
      `vec3` 型のユニフォーム変数を設定する。

      `setShader` の後に実行すること。
    params:
      - name: name
        type: string
        description: ユニフォーム変数の名前
      - name: x
        type: number
        description: x成分
      - name: y
        type: number
        description: y成分
      - name: z
        type: number
        description: z成分

  - name: setFloat
    description: |-
      `vec4` 型のユニフォーム変数を設定する。

      `setShader` の後に実行すること。
    params:
      - name: name
        type: string
        description: ユニフォーム変数の名前
      - name: x
        type: number
        description: x成分
      - name: y
        type: number
        description: y成分
      - name: z
        type: number
        description: z成分
      - name: w
        type: number
        description: w成分

  - name: setInt
    description: |-
      `int` 型のユニフォーム変数を設定する。

      `setShader` の後に実行すること。
    params:
      - name: name
        type: string
        description: ユニフォーム変数の名前
      - name: x
        type: integer
        description: 値

  - name: setInt
    description: |-
      `ivec2` 型のユニフォーム変数を設定する。

      `setShader` の後に実行すること。
    params:
      - name: name
        type: string
        description: ユニフォーム変数の名前
      - name: x
        type: integer
        description: x成分
      - name: y
        type: integer
        description: y成分

  - name: setInt
    description: |-
      `ivec3` 型のユニフォーム変数を設定する。

      `setShader` の後に実行すること。
    params:
      - name: name
        type: string
        description: ユニフォーム変数の名前
      - name: x
        type: integer
        description: x成分
      - name: y
        type: integer
        description: y成分
      - name: z
        type: integer
        description: z成分

  - name: setInt
    description: |-
      `ivec4` 型のユニフォーム変数を設定する。

      `setShader` の後に実行すること。
    params:
      - name: name
        type: string
        description: ユニフォーム変数の名前
      - name: x
        type: integer
        description: x成分
      - name: y
        type: integer
        description: y成分
      - name: z
        type: integer
        description: z成分
      - name: w
        type: integer
        description: w成分

  - name: setUInt
    description: |-
      `uint` 型のユニフォーム変数を設定する。

      `setShader` の後に実行すること。
    params:
      - name: name
        type: string
        description: ユニフォーム変数の名前
      - name: x
        type: integer
        description: 値

  - name: setUInt
    description: |-
      `uvec2` 型のユニフォーム変数を設定する。

      `setShader` の後に実行すること。
    params:
      - name: name
        type: string
        description: ユニフォーム変数の名前
      - name: x
        type: integer
        description: x成分
      - name: y
        type: integer
        description: y成分

  - name: setUInt
    description: |-
      `uvec3` 型のユニフォーム変数を設定する。

      `setShader` の後に実行すること。
    params:
      - name: name
        type: string
        description: ユニフォーム変数の名前
      - name: x
        type: integer
        description: x成分
      - name: y
        type: integer
        description: y成分
      - name: z
        type: integer
        description: z成分

  - name: setUInt
    description: |-
      `uvec4` 型のユニフォーム変数を設定する。

      `setShader` の後に実行すること。
    params:
      - name: name
        type: string
        description: ユニフォーム変数の名前
      - name: x
        type: integer
        description: x成分
      - name: y
        type: integer
        description: y成分
      - name: z
        type: integer
        description: z成分
      - name: w
        type: integer
        description: w成分

  - name: setMatrix
    description: |-
      行列のユニフォーム変数を設定する。

      `setShader` の後に実行すること。
    params:
      - name: name
        type: string
        description: ユニフォーム変数の名前
      - name: matrixType
        type: string
        description: 行列の形
        enum:
          - value: 2x2
          - value: 3x3
          - value: 4x4
          - value: 2x3
          - value: 3x2
          - value: 2x4
          - value: 4x2
          - value: 3x4
          - value: 4x3
      - name: transpose
        type: boolean
        description: |-
          `true` なら転置する
      - name: value
        type: number[]
        description: 行列の各要素の値。要素数は行列の要素数とあわせること

  - name: setTexture2D
    description: テクスチャをバインドする。
    params:
      - name: unit
        type: integer
        description: テクスチャのユニット番号
      - name: data
        type: lightuserdata
        description: テクスチャのBGRA配列へのポインタ
      - name: width
        type: integer
        description: テクスチャの幅
      - name: height
        type: integer
        description: テクスチャの高さ

  - name: draw
    description: |-
      描画する。

      描画後にテクスチャは破棄される。
    params:
      - name: mode
        type: string
        description: 描画するプリミティブ
        enum:
          - value: POINTS
          - value: LINE_STRIP
          - value: LINE_LOOP
          - value: LINES
          - value: LINE_STRIP_ADJACENCY
          - value: LINES_ADJACENCY
          - value: TRIANGLE_STRIP
          - value: TRIANGLE_FAN
          - value: TRIANGLES
          - value: TRIANGLE_STRIP_ADJACENCY
          - value: TRIANGLES_ADJACENCY
          - value: PATCHES
      - name: data
        type: lightuserdata
        description: 描画先のBGRA配列へのポインタ
      - name: width
        type: integer
        description: 描画先の幅
      - name: height
        type: integer
        description: 描画先の高さ
      - name: instanceCount
        type: integer
        description: 描画インスタンス数。1以上の整数を指定する。省略した場合は 1 。
        optional: true
